/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package kasir;

import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;



/**
 *
 * @author user
 */
public class pilMenuForm extends javax.swing.JFrame {
    
    private kasir mainForm;
    
    private JTable tabelMenu;
    private JButton btnPilih;
    private DefaultTableModel model;


    /**
     * Creates new form pilMenuForm
     */
    public pilMenuForm(kasir mainForm) {
        this.mainForm = mainForm;
        setTitle("Pilih Menu");
        setSize(500, 400);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        initui();
        loadMenuFromDB();
    }
    
     private void initui() {
        model = new DefaultTableModel(new Object[]{"ID", "Nama Menu", "Harga", "Jumlah"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 3; // hanya kolom jumlah yang bisa diedit
            }
        };

        tabelMenu = new JTable(model);
        JScrollPane scrollPane = new JScrollPane(tabelMenu);

        // Pasang ComboBox jumlah di kolom 3 (Jumlah)
        JComboBox<Integer> comboJumlah = new JComboBox<>();
        for (int i = 1; i <= 10; i++) comboJumlah.addItem(i);

        TableColumn jumlahColumn = tabelMenu.getColumnModel().getColumn(3);
        jumlahColumn.setCellEditor(new DefaultCellEditor(comboJumlah));

        btnPilih = new JButton("Pilih Menu");
        btnPilih.addActionListener(e -> pilihMenu());

        add(scrollPane, BorderLayout.CENTER);
        add(btnPilih, BorderLayout.SOUTH);
    }

    private void loadMenuFromDB() {
        try (Connection conn = dbkoneksi.getConnection()) {
            String sql = "SELECT idmenu, namamenu, hargamenu FROM menu";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                        rs.getInt("idmenu"),
                        rs.getString("namamenu"),
                        rs.getInt("hargamenu"),
                        1 // default jumlah = 1
                });
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Gagal load menu: " + ex.getMessage());
        }
    }

    private void pilihMenu() {
        int row = tabelMenu.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Pilih salah satu menu terlebih dahulu.");
            return;
        }

        int id = (int) model.getValueAt(row, 0);
        String nama = (String) model.getValueAt(row, 1);
        int harga = (int) model.getValueAt(row, 2);
        int jumlah = (int) model.getValueAt(row, 3);
        int total = harga * jumlah;

        // kirim ke MainForm
        mainForm.tambahMenuKeTabel(id, nama, harga, jumlah, total);

        dispose(); // tutup jendela PanelMenu
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pilMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pilMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pilMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pilMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
